global function RiffLmaoBox_Init 

#if SERVER
struct {
    table<entity, int> playerWeapons
    array<string> lmaoboxWeapons
} file
#endif

void function RiffLmaoBox_Init()
{
    AddPrivateMatchModeSettingEnum( "#MODE_SETTING_CATEGORY_RIFF", "riff_lmaobox", [ "#SETTING_DISABLED", "#SETTING_ENABLED" ], "0" )

    #if SERVER
	if ( GetCurrentPlaylistVarInt( "riff_Lmaobox", 0 ) == 0 )
		return

	SetLoadoutGracePeriodEnabled( false )
	SetWeaponDropsEnabled( false )
	
	file.lmaoboxWeapons = [
		"mp_weapon_smart_pistol"
	]

	AddCallback_OnPlayerRespawned( LmaoboxSetWeapons )
	AddCallback_OnPlayerKilled( LmaoboxGiveAmmo )
	#endif


}

#if SERVER
void function LmaoboxSetWeapons( entity player )
{
	SendHudMessage( player, "Get good, get LMAObox!", -1, 0.8, 255, 255, 255, 0, 0.15, 4, 0.15 )
	player.SetMaxHealth( 1 )

    foreach( entity weapon in player.GetMainWeapons() ) {
		player.TakeWeaponNow( weapon.GetWeaponClassName() )
	}
	player.TakeWeaponNow( player.GetOffhandWeapon( OFFHAND_RIGHT ).GetWeaponClassName() )
	if ( !HasOffhandWeapon( player, "mp_weapon_grenade_sonar" ) ) {
		player.GiveOffhandWeapon( "mp_weapon_grenade_sonar", OFFHAND_RIGHT )
	} else {
		player.TakeWeaponNow( player.GetOffhandWeapon( OFFHAND_LEFT ).GetWeaponClassName() )
		player.GiveOffhandWeapon( "mp_weapon_grenade_sonar", OFFHAND_RIGHT )
		player.GiveOffhandWeapon( "mp_ability_grapple", OFFHAND_LEFT )
	}
	if ( HasOffhandWeapon( player, "mp_ability_cloak" ) ) {
		player.TakeWeaponNow( player.GetOffhandWeapon( OFFHAND_LEFT ).GetWeaponClassName() )
		SendHudMessage( player, "You can run, but you can't hide!", -1, 0.8, 255, 0, 0, 0, 0.15, 4, 0.15 )
		player.GiveOffhandWeapon( "mp_ability_heal", OFFHAND_LEFT )
	}
	if ( HasOffhandWeapon( player, "mp_ability_holopilot" ) ) {
		SendHudMessage( player, "This is a certified Holo Pilot moment.", -1, 0.8, 105, 119, 144, 0, 0.15, 4, 0.15 )
	}

	player.GiveWeapon( "mp_weapon_smart_pistol" )
}

void function LmaoboxGiveAmmo( entity victim, entity attacker, var damageInfo )
{
	if ( !victim.IsPlayer() || !attacker.IsPlayer() || victim == attacker )
		return
	
	foreach ( entity weapon in attacker.GetMainWeapons() ) {
		weapon.SetWeaponPrimaryAmmoCount(12)
	}
}
#endif