// Globals
global function RiffLmaoBox_Init 

//Needed to type arrays
struct {
	array<string> ordinance
	array<string> tactical
	array<string> banned
} replacements

void function RiffLmaoBox_Init()
{
	// Adds private match settings, under #MODE_SETTING_CATEGORY_LMAOBOX. Format seems to be category, playlist var name, [options] unless arbitrary, default value
    AddPrivateMatchModeSettingEnum( "#MODE_SETTING_CATEGORY_LMAOBOX", "riff_lmaobox", [ "#SETTING_DISABLED", "#SETTING_ENABLED" ], "0" )

	AddPrivateMatchModeSettingEnum( "#MODE_SETTING_CATEGORY_LMAOBOX", "lmaobox_instant_lock", [ "#SETTING_DISABLED", "#SETTING_ENABLED" ], "1")
    AddPrivateMatchModeSettingEnum( "#MODE_SETTING_CATEGORY_LMAOBOX", "lmaobox_refill_clip_on_kill", [ "#SETTING_DISABLED", "#SETTING_ENABLED" ], "0" )
	AddPrivateMatchModeSettingArbitrary( "#MODE_SETTING_CATEGORY_LMAOBOX", "lmaobox_refill_clip_amount", "12" )
    AddPrivateMatchModeSettingEnum( "#MODE_SETTING_CATEGORY_LMAOBOX", "lmaobox_refill_reserve_on_kill", [ "#SETTING_DISABLED", "#SETTING_ENABLED" ], "1" )
	AddPrivateMatchModeSettingArbitrary( "#MODE_SETTING_CATEGORY_LMAOBOX", "lmaobox_refill_reserve_amount", "12" )

	AddPrivateMatchModeSettingEnum( "#MODE_SETTING_CATEGORY_LMAOBOX", "lmaobox_replace_ordinance_with", [ "#WPN_GRENADE_SONAR", "#WPN_FRAG_GRENADE", "#WPN_GRENADE_EMP", "#WPN_THERMITE_GRENADE", "#WPN_GRENADE_ELECTRIC_SMOKE", "#WPN_FRAG_DRONE", "#WPN_GRENADE_GRAVITY", "#WPN_SATCHEL", "#LOCALIZATION_NOTHING", "#SETTING_DISABLED" ], "0" )

    AddPrivateMatchModeSettingEnum( "#MODE_SETTING_CATEGORY_LMAOBOX", "lmaobox_ban_cloak", [ "#SETTING_DISABLED", "#SETTING_ENABLED" ], "1" )
    AddPrivateMatchModeSettingEnum( "#MODE_SETTING_CATEGORY_LMAOBOX", "lmaobox_ban_pulse_blade", [ "#SETTING_DISABLED", "#SETTING_ENABLED" ], "0" )
    AddPrivateMatchModeSettingEnum( "#MODE_SETTING_CATEGORY_LMAOBOX", "lmaobox_ban_grapple", [ "#SETTING_DISABLED", "#SETTING_ENABLED" ], "0" )
    AddPrivateMatchModeSettingEnum( "#MODE_SETTING_CATEGORY_LMAOBOX", "lmaobox_ban_stim", [ "#SETTING_DISABLED", "#SETTING_ENABLED" ], "0" )
    AddPrivateMatchModeSettingEnum( "#MODE_SETTING_CATEGORY_LMAOBOX", "lmaobox_ban_awall", [ "#SETTING_DISABLED", "#SETTING_ENABLED" ], "1" )
    AddPrivateMatchModeSettingEnum( "#MODE_SETTING_CATEGORY_LMAOBOX", "lmaobox_ban_phase_shift", [ "#SETTING_DISABLED", "#SETTING_ENABLED" ], "0" )
    AddPrivateMatchModeSettingEnum( "#MODE_SETTING_CATEGORY_LMAOBOX", "lmaobox_ban_holo_pilot", [ "#SETTING_DISABLED", "#SETTING_ENABLED" ], "0" )
    AddPrivateMatchModeSettingEnum( "#MODE_SETTING_CATEGORY_LMAOBOX", "lmaobox_replace_banned_tacticals_with", [ "#WPN_CLOAK", "#WPN_GRENADE_SONAR", "#WPN_GRAPPLE", "#WPN_STIM", "#WPN_DEPLOYABLE_COVER_SHORT", "#WPN_SHIFTER", "#WPN_HOLOPILOT", "#LOCALIZATION_NOTHING" ], "3" )

    AddPrivateMatchModeSettingEnum( "#MODE_SETTING_CATEGORY_LMAOBOX", "lmaobox_hud_messages", [ "#SETTING_DISABLED", "#SETTING_ENABLED" ], "1" )
    AddPrivateMatchModeSettingArbitrary( "#MODE_SETTING_CATEGORY_LMAOBOX", "lmaobox_message_on_spawn", "Get good, get LMAOBox!" )
    AddPrivateMatchModeSettingArbitrary( "#MODE_SETTING_CATEGORY_LMAOBOX", "lmaobox_message_on_kill", "LMAOBox - Way to the top!" )
    AddPrivateMatchModeSettingArbitrary( "#MODE_SETTING_CATEGORY_LMAOBOX", "lmaobox_message_on_die", "LMAOBox - Best free TF|2 hacks!" )
    AddPrivateMatchModeSettingArbitrary( "#MODE_SETTING_CATEGORY_LMAOBOX", "lmaobox_message_on_banned_tactical", "You can run, but you can't hide!" )

    #if SERVER
	// getcurrentplaylistvar(datatype, like int, string, etc) params are playlist var name, then something else idk what it is, seems setting to default value from above works fine
	if ( GetCurrentPlaylistVarInt( "riff_lmaobox", 0 ) == 0 )
		return

	SetLoadoutGracePeriodEnabled( false )
	SetWeaponDropsEnabled( false )

	AddCallback_OnPlayerRespawned( LmaoboxSetWeapons )
	AddCallback_OnPlayerKilled( LmaoboxGiveAmmo )
	#endif
}

#if SERVER
void function LmaoboxSetWeapons( entity player )
{
	if ( GetCurrentPlaylistVarInt( "lmaobox_hud_messages", 1 ) == 1 ) {
		SendHudMessage( player, GetCurrentPlaylistVarString( "lmaobox_message_on_spawn", "Get good, get LMAOBox!" ), -1, 0.8, 255, 255, 255, 0, 0.15, 4, 0.15 )
	}
	
	if ( GetCurrentPlaylistVarInt( "lmaobox_instant_lock", 1) == 1) {
		player.SetMaxHealth(30)
	} 

    foreach( entity weapon in player.GetMainWeapons() ) {
		player.TakeWeaponNow( weapon.GetWeaponClassName() )
	}

	if ( GetCurrentPlaylistVarInt("lmaobox_replace_ordinance_with",0) != 9) {
		player.TakeWeaponNow( player.GetOffhandWeapon( OFFHAND_RIGHT ).GetWeaponClassName() )
		replacements.ordinance = [
			"mp_weapon_grenade_sonar",
			"mp_weapon_frag_grenade",
			"mp_weapon_grenade_emp", 
			"mp_weapon_thermite_grenade",
			"mp_weapon_grenade_electric_smoke", 
			"mp_weapon_frag_drone", 
			"mp_weapon_grenade_gravity", 
			"mp_weapon_satchel",
			""
		] 
		if ( replacements.ordinance[GetCurrentPlaylistVarInt("lmaobox_replace_ordinance_with", 0)] == "mp_weapon_grenade_sonar") {
			if ( player.GetOffhandWeapon( OFFHAND_LEFT ).GetWeaponClassName() == "mp_weapon_grenade_sonar") {
				player.TakeWeaponNow( player.GetOffhandWeapon( OFFHAND_LEFT ).GetWeaponClassName() )
				player.GiveOffhandWeapon( "mp_ability_grapple", OFFHAND_LEFT )
			}
			player.GiveOffhandWeapon( replacements.ordinance[GetCurrentPlaylistVarInt("lmaobox_replace_ordinance_with", 0)], OFFHAND_RIGHT)
		} else if ( replacements.ordinance[GetCurrentPlaylistVarInt("lmaobox_replace_ordinance_with", 0)] != "") {
			player.GiveOffhandWeapon( replacements.ordinance[GetCurrentPlaylistVarInt("lmaobox_replace_ordinance_with", 0)], OFFHAND_RIGHT)
		}
	}
		
	if ( HasOffhandWeapon( player, "mp_ability_holopilot" ) && GetCurrentPlaylistVarInt("lmaobox_hud_messages",1) == 1 ) {
		SendHudMessage( player, "This is a certified Holo Pilot moment.", -1, 0.8, 105, 119, 144, 0, 0.15, 4, 0.15 )
	}
	
	//This is a fucking crime, blame sol
	// :)
	replacements.banned = []
	if ( GetCurrentPlaylistVarInt("lmaobox_ban_pulse_blade",0) == 1 ) {
		replacements.banned.append("mp_weapon_grenade_sonar")
	}
	if ( GetCurrentPlaylistVarInt("lmaobox_ban_grapple",0) == 1 ) {
		replacements.banned.append("mp_ability_grapple")
	}
	if ( GetCurrentPlaylistVarInt("lmaobox_ban_stim",0) == 1 ) {
		replacements.banned.append("mp_ability_heal")
	}
	if ( GetCurrentPlaylistVarInt("lmaobox_ban_phase_shift",0) == 1 ) {
		replacements.banned.append("mp_ability_shifter")
	}
	if ( GetCurrentPlaylistVarInt("lmaobox_ban_holo_pilot",0) == 1 ) {
		replacements.banned.append("mp_ability_holopilot")
	}
	if ( GetCurrentPlaylistVarInt("lmaobox_ban_cloak",1) == 1 ) {
		replacements.banned.append("mp_ability_cloak")
	}
	if ( GetCurrentPlaylistVarInt("lmaobox_ban_awall",1) == 1 ) {
		replacements.banned.append("mp_weapon_deployable_cover")
	}

	foreach ( string bannedTacticalItem in replacements.banned ) {
		if ( HasOffhandWeapon( player, bannedTacticalItem ) ) {
			player.TakeWeaponNow( player.GetOffhandWeapon( OFFHAND_LEFT ).GetWeaponClassName() )

			if ( GetCurrentPlaylistVarInt("lmaobox_hud_messages",1) == 1 ) {
				SendHudMessage( player, GetCurrentPlaylistVarString("lmaobox_message_on_banned_tactical","You can run, but you can't hide!"), -1, 0.8, 255, 0, 0, 0, 0.15, 4, 0.15 )
			}
			
			replacements.tactical = [
				"mp_ability_cloak",
				"mp_weapon_grenade_sonar", 
				"mp_ability_grapple", 
				"mp_ability_heal", 
				"mp_weapon_deployable_cover", 
				"mp_ability_shifter", 
				"mp_ability_holopilot",
				""
			]	
			if ( replacements.tactical[GetCurrentPlaylistVarInt("lmaobox_replace_banned_tacticals_with",3)] != "") {
				player.GiveOffhandWeapon( replacements.tactical[GetCurrentPlaylistVarInt("lmaobox_replace_banned_tacticals_with",3)], OFFHAND_LEFT )
			}
		}
	}
	player.GiveWeapon( "mp_weapon_smart_pistol" )
}

void function LmaoboxGiveAmmo( entity victim, entity attacker, var damageInfo )
{
	if ( !victim.IsPlayer() || !attacker.IsPlayer() || victim == attacker ) {
		return
	}

	if ( GetCurrentPlaylistVarInt("lmaobox_hud_messages",1) == 1) {
		SendHudMessage( attacker, GetCurrentPlaylistVarString("lmaobox_message_on_kill","LMAOBox - Way to the top!"), -1, 0.8, 0, 255, 0, 0, 0.15, 4, 0.15 )
		SendHudMessage( victim,  GetCurrentPlaylistVarString("lmaobox_message_on_die","LMAOBox - Best free TF|2 hacks!"), -1, 0.8, 255, 0, 0, 0, 0.15, 4, 0.15 )
	}
	
	foreach ( entity weapon in attacker.GetMainWeapons() ) {
		if ( GetCurrentPlaylistVarInt("lmaobox_refill_clip_on_kill",0) == 1 ) {
			int toSet = weapon.GetWeaponPrimaryClipCount() + GetCurrentPlaylistVarInt("lmaobox_refill_clip_amount",12) + 1
			if ( toSet > 12 ) {
				toSet = 12
			}
			weapon.SetWeaponPrimaryClipCount( toSet )
		}
		if ( GetCurrentPlaylistVarInt("lmaobox_refill_reserve_on_kill",1) == 1 ) {
			weapon.SetWeaponPrimaryAmmoCount(GetCurrentPlaylistVarInt("lamobox_refill_reserve_amount",12))
		}
	}
}
#endif